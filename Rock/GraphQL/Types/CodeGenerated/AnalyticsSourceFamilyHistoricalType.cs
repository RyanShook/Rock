//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

using GraphQL;
using Rock.Model;

namespace Rock.GraphQL.Types
{
    /// <summary>
    /// AnalyticsSourceFamilyHistorical GraphQL Type
    /// </summary>
    public partial class AnalyticsSourceFamilyHistorical : ModelGraphType<Rock.Model.AnalyticsSourceFamilyHistorical>
    {
       public AnalyticsSourceFamilyHistorical(): base("AnalyticsSourceFamilyHistorical")
       {
          Field("AdultCount", x => x.AdultCount, nullable: false);
          Field("CampusId", x => x.CampusId, nullable: true);
          Field("ChildCount", x => x.ChildCount, nullable: false);
          Field("ConnectionStatus", x => x.ConnectionStatus, nullable: false);
          Field("CurrentRowIndicator", x => x.CurrentRowIndicator, nullable: false);
          Field("EffectiveDate", x => x.EffectiveDate, nullable: false);
          Field("ExpireDate", x => x.ExpireDate, nullable: false);
          Field("FamilyId", x => x.FamilyId, nullable: false);
          Field("FamilyTitle", x => x.FamilyTitle, nullable: false);
          Field("ForeignGuid", x => x.ForeignGuid.ToStringSafe(), nullable: true);
          Field("ForeignKey", x => x.ForeignKey, nullable: false);
          Field("HeadOfHouseholdPersonKey", x => x.HeadOfHouseholdPersonKey, nullable: true);
          Field("IsEra", x => x.IsEra, nullable: false);
          Field("IsFamilyActive", x => x.IsFamilyActive, nullable: false);
          Field("MailingAddressLocationId", x => x.MailingAddressLocationId, nullable: true);
          Field("MappedAddressLocationId", x => x.MappedAddressLocationId, nullable: true);
          Field("Name", x => x.Name, nullable: false);
          Field("Guid", x => x.Guid.ToStringSafe(), nullable: false);
          Field("ForeignId", x => x.ForeignId, nullable: true);
       }
       public override Rock.Model.AnalyticsSourceFamilyHistorical GetById(int id, GraphQLContext context)
       {
           var service = new Rock.Model.AnalyticsSourceFamilyHistoricalService(context.db);
           return service.Get(id);
       }
   }
}
